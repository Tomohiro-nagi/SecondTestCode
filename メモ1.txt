目的:ファイル名を連番指定するためにフォーマット済み文字列が欲しい

DrawFormatStringとかの結果を文字列として受け取りたいときに使う
sprintf

sprintf(add,フォーマット文字,引数);
add = フォーマット済み文字を受け取るアドレス
フォーマット文字
もし、SDLチェックが入っている場合、これはセキュリティ上
問題があるとか言って使えない
sprintf_s(add,サイズ,フォーマット文字,引数);

但し注意点としては、addのアドレスは「確保済み」であることなので
wsprintf←_s版がない

もし、ostringstreamに対して、printf時の%02dのように0埋め揃えをしたい
場合はマニピュレータというものを使う
①#include<iomanip>をインクルード
②setw(数値)で、フォーマットの幅を示します。上の例ならsetw（２）
③setfill（もじ）で、埋めたい文字を指定します。上の例ならsetfill('0')
pathOss<<std::setw(2)<<std::setfill('0');
これを描くと、次にpathOssに入ってくる情報はすべてこのフォーマットになる

場合によっては、マルチバイト文字と、ワイド文字を相互変換させたい

例えばMMDのモデル(PMD,PMX)の中のデータには、テクスチャのパス等を
教えてくれる文字列が埋め込まれてたりします。

で、PMDの文字列は「マルチバイト文字」
PMXの文字列は「Unicode文字」（ワイド）
です。

とはいえ、相互変換が必要
Windowsの関数であるMultiByteToWideCharとかWideCharToMultiByteてな関数を使う

リンカーエラーが出る理由
①関数等

必要なライブラリをインクルードしていない

③ヘッダファイルに実態を描いてる
このヘッダファイルを参照してるのが一つだけなら
問題ないけど、複数のファイルで参照してると
複数の実態・・・実態っていうのはメモリを確保してるってことです
